[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hao Wang. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang H (2024). ggcompare: Mean Comparison \"ggplot2\". R package version 0.0.1, https://github.com/HMU-WH/ggcompare/, https://hmu-wh.github.io/ggcompare/.","code":"@Manual{,   title = {ggcompare: Mean Comparison in \"ggplot2\"},   author = {Hao Wang},   year = {2024},   note = {R package version 0.0.1, https://github.com/HMU-WH/ggcompare/},   url = {https://hmu-wh.github.io/ggcompare/}, }"},{"path":[]},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Mean Comparison in ","text":"package subsection extracted personal toolkit. created improve upon shortcomings [0.6.4]ggsignif::geom_signif() [0.6.0]ggpubr::stat_compare_means(): Inability adapt stably faceting. Inability perform layer-level P-value adjustment (ggpubr can achieve panel-level adjustment). Failure perform statistical tests smoothly absence groupings. often cause poor faceting performance. Usually need specify test method, need tell stat_compare whether want perform parametric test nonparametric test, stat_compare automatically choose appropriate test method based data. comparisons two groups, p-value calculated t-test (parametric) Wilcoxon rank sum test (nonparametric). comparisons among two groups, p-value calculated One-way ANOVA (parametric) Kruskal-Wallis test (nonparametric).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mean Comparison in ","text":"can install development version ggcompare GitHub :","code":"devtools::install_github(\"HMU-WH/ggcompare\")"},{"path":"/index.html","id":"basic","dir":"","previous_headings":"","what":"Basic","title":"Mean Comparison in ","text":"Global comparison: x one group.    Comparison two groups: specify reference group.    Comparison two groups: specify comparison group.  Within-group (grouped x-axis) population comparison.","code":"library(ggplot2) library(ggcompare) p <- ggplot(mpg, aes(class, displ, color = class)) +    geom_boxplot(show.legend = FALSE) +    theme_test() p + stat_compare() # If you just want to display text, you can set parameters \"bracket\" to FALSE. p + stat_compare(bracket = FALSE) # If you want to display the test method, you can do this. p + stat_compare(aes(label = after_stat(sprintf(\"%s: %s\", method, label)))) p + stat_compare(ref_group = \"minivan\") # If you only want to display the p-value less or equal to 0.01, you can do this. p + stat_compare(ref_group = \"minivan\", cutoff = 0.01) # if you want to display the significance level, you can do this. p + stat_compare(ref_group = \"minivan\", breaks = c(0, 0.001, 0.01, 0.05, 1)) p + stat_compare(tip_length = 0.05,                  step_increase = 0,                   comparisons = list(c(\"compact\", \"midsize\"), c(\"pickup\", \"suv\")),                   arrow = grid::arrow(type = \"closed\", length = unit(0.1, \"inches\"))) # Yeah, this supports adding arrows. ggplot(mpg, aes(drv, displ, fill = class)) +   geom_boxplot() +   stat_compare() +   stat_compare(aes(group = drv), nudge = 0.1, color = \"gray\") + # add global comparison   theme_test()"},{"path":"/index.html","id":"enhancement","dir":"","previous_headings":"","what":"Enhancement","title":"Mean Comparison in ","text":"Better adaptation faceting.   P-value correction","code":"p <- ggplot(mpg, aes(drv, displ)) +   geom_boxplot() +   facet_grid(cols = vars(class), scales = \"free\") +   theme_test() +    theme(plot.title = element_text(size = 20))  comparisons <- combn(unique(mpg$drv), 2, simplify = FALSE)  p1 <- p + stat_compare(comparisons = comparisons) +   ggtitle(\"ggcompare::stat_compare\")  # missing test information in some panels p2 <- p + ggsignif::geom_signif(comparisons = comparisons, step_increase = 0.1) +   ggtitle(\"ggsignif::geom_signif\") p <- ggplot(mpg, aes(class, displ)) +   geom_boxplot() +   facet_grid(cols = vars(cyl), scales = \"free\") +   theme_test() +    theme(plot.title = element_text(size = 20),         axis.text.x = element_text(angle = 45, hjust = 1))  p3 <- p + stat_compare() + ggtitle(\"ggcompare::stat_compare\")  # missing test information in all panels p4 <- p + ggpubr::stat_compare_means() + ggtitle(\"ggpubr::stat_compare_means\") # Layer-level p5 <- p + stat_compare(ref_group = 1, correction = \"fdr\") + ggtitle(\"Layer-level P-value adjustment\") # Panel-level p6 <- p + stat_compare(ref_group = 1, correction = \"fdr\", panel_indep = TRUE) + ggtitle(\"Panel-level P-value adjustment\")"},{"path":"/reference/geom_bracket.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Brackets with Labels to a ggplot — geom_bracket","title":"Add Brackets with Labels to a ggplot — geom_bracket","text":"Add brackets labeled annotations ggplot.","code":""},{"path":"/reference/geom_bracket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Brackets with Labels to a ggplot — geom_bracket","text":"","code":"geom_bracket(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   parse = FALSE,   bracket = TRUE,   inherit.aes = TRUE )"},{"path":"/reference/geom_bracket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Brackets with Labels to a ggplot — geom_bracket","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... additional arguments passed layer(). arrow arrow, arrow appear ends brackets, created grid::arrow(). parse logical, whether parse labels expressions displayed described plotmath. bracket logical, whether display bracket. FALSE, label displayed. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_bracket.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add Brackets with Labels to a ggplot — geom_bracket","text":"required: xmin, xmax, ymin, ymax, label optional: angle, alpha, hjust, vjust, colour, family, fontsize, fontface, linetype, linewidth, lineheight","code":""},{"path":"/reference/geom_bracket.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Brackets with Labels to a ggplot — geom_bracket","text":"HMU-WH","code":""},{"path":"/reference/geom_bracket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Brackets with Labels to a ggplot — geom_bracket","text":"","code":"if (FALSE) { # interactive() ggplot(mpg, aes(class, displ)) +   geom_boxplot() +   annotate(\"bracket\", xmin = 2, xmax = 4, ymin = 4.5, ymax = 5, label = \"label\",            arrow = grid::arrow(type = \"closed\", length = unit(0.1, \"inches\"))) }"},{"path":"/reference/ggcompare-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggcompare: Mean Comparison in ","title":"ggcompare: Mean Comparison in ","text":"Add mean comparison annotations \"ggplot\" support layer-level p-value corrections.","code":""},{"path":[]},{"path":"/reference/ggcompare-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggcompare: Mean Comparison in ","text":"Maintainer: Hao Wang wanghao8772@gmail.com (ORCID)","code":""},{"path":"/reference/stat_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Mean Comparison for Groups to a ggplot — stat_compare","title":"Add Mean Comparison for Groups to a ggplot — stat_compare","text":"Add group mean comparisons ggplot. comparisons can performed using t-test, Wilcoxon rank-sum test, one-way ANOVA, Kruskal-Wallis test.","code":""},{"path":"/reference/stat_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Mean Comparison for Groups to a ggplot — stat_compare","text":"","code":"stat_compare(   mapping = NULL,   data = NULL,   position = \"identity\",   ...,   nudge = 0,   start = NULL,   breaks = NULL,   labels = NULL,   cutoff = NULL,   method = NULL,   ref_group = NULL,   tip_length = 0.02,   parametric = FALSE,   correction = \"none\",   panel_indep = FALSE,   method_args = NULL,   comparisons = NULL,   step_increase = 0.1,   inherit.aes = TRUE )"},{"path":"/reference/stat_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Mean Comparison for Groups to a ggplot — stat_compare","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... additional arguments passed geom_bracket(). nudge numeric, nudge start position fraction scale range. start numeric, bracket start position. Defaults maximum value y. breaks numeric, breaks p-value labels, like c(0, 0.001, 0.01, 0.05, 1). labels character, labels p-value breaks, like c(\"\", \"\", \"\", \"ns\"). cutoff numeric, cutoff p-value, labels value removed. method function, method test; support formula interface return list components p.value method (name). ref_group character, reference group comparison. groups compared group. tip_length numeric, length bracket tips fraction scale range. parametric logical, whether use parametric test (t-test, One-way ANOVA) non-parametric test (Wilcoxon rank sum test, Kruskal-Wallis test). Applicable method NULL. correction character, method p-value adjustment; options include p.adjust.methods \"none\" default. panel_indep logical, whether correct p-value panel level. FALSE, p-value corrected layer level. method_args list, additional arguments passed test method. comparisons list, list comparisons made. element contain two groups compared. step_increase numeric, step increase fraction scale range every additional comparison, order avoid overlapping brackets. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/stat_compare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Mean Comparison for Groups to a ggplot — stat_compare","text":"Usually need specify test method, need tell \"stat_compare\" whether want perform parametric test nonparametric test, \"stat_compare\" automatically choose appropriate test method based data. comparisons two groups, p-value calculated t-test (parametric) Wilcoxon rank sum test (nonparametric). comparisons among two groups, p-value calculated One-way ANOVA (parametric) Kruskal-Wallis test (nonparametric).","code":""},{"path":"/reference/stat_compare.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add Mean Comparison for Groups to a ggplot — stat_compare","text":"required: x, y","code":""},{"path":"/reference/stat_compare.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Add Mean Comparison for Groups to a ggplot — stat_compare","text":"p: p-value test. q: adjusted p-value test. label: label bracket. method: method name test. xmin, xmax, ymin, ymax: position bracket.","code":""},{"path":"/reference/stat_compare.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Mean Comparison for Groups to a ggplot — stat_compare","text":"HMU-WH","code":""},{"path":"/reference/stat_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Mean Comparison for Groups to a ggplot — stat_compare","text":"","code":"if (FALSE) { # interactive() p <- ggplot(mpg, aes(class, displ, color = class)) +   geom_boxplot(show.legend = FALSE) +   theme_test()  # Global comparison: Each x has only one group. p + stat_compare() # If you just want to display text, you can set parameters \"bracket\" to FALSE. p + stat_compare(bracket = FALSE) # If you want to display the test method, you can do this. p + stat_compare(aes(label = after_stat(sprintf(\"%s: %s\", method, label))))  # Comparison between two groups: specify a reference group. p + stat_compare(ref_group = \"minivan\") # If you only want to display the p-value less or equal to 0.01, you can do this. p + stat_compare(ref_group = \"minivan\", cutoff = 0.01) # if you want to display the significance level, you can do this. p + stat_compare(ref_group = \"minivan\", breaks = c(0, 0.001, 0.01, 0.05, 1))  # Comparison between two groups: specify the comparison group. p + stat_compare(tip_length = 0.05,                  step_increase = 0,                  comparisons = list(c(\"compact\", \"midsize\"), c(\"pickup\", \"suv\")),                  arrow = grid::arrow(type = \"closed\", length = unit(0.1, \"inches\")))                  # Yeah, this supports adding arrows.  # Within-group (grouped by the x-axis) population comparison. ggplot(mpg, aes(drv, displ, fill = class)) +   geom_boxplot() +   stat_compare() +   stat_compare(aes(group = drv), nudge = 0.1, color = \"gray\") + # add global comparison   theme_test()  # Better adaptation to faceting. ggplot(mpg, aes(drv, displ)) +   geom_boxplot() +   stat_compare(comparisons = combn(unique(mpg$drv), 2, simplify = FALSE)) +   facet_grid(cols = vars(class), scales = \"free\") +   theme_test()  # P-value correction p <- ggplot(mpg, aes(class, displ)) +   geom_boxplot() +   facet_grid(cols = vars(cyl), scales = \"free\") +   theme_test() # Layer-level P-value correction p + stat_compare(ref_group = 1, correction = \"fdr\") # Panel-level P-value correction p + stat_compare(ref_group = 1, correction = \"fdr\", panel_indep = TRUE) }"},{"path":"/news/index.html","id":"ggcompare-001","dir":"Changelog","previous_headings":"","what":"ggcompare 0.0.1","title":"ggcompare 0.0.1","text":"Initial CRAN submission.","code":""}]
